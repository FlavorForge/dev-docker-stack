services:

  # ElasticSearch Content

  # elasticsearch_kibana:
  #   image: docker.elastic.co/kibana/kibana:8.11.0
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    # deploy:
    #   mode: replicated
    #   replicas: 3  # Three Elasticsearch nodes for clustering
    #   resources:
    #     limits:
    #       memory: 2G
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app_network
      
  # Redis Content
  
  # redis_insight:
  #   image: redislabs/redisinsight:latest
  #   ports:
  #     - "8001:8001"
  #   volumes:
  #     - redisinsight_data:/db
  #   depends_on:
  #     - redis
  
  redis:
    image: redis:latest
    deploy:
      mode: global
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - app_network

  # Neo4j Stack

  # neo4j_browser:
  #   image: neo4j:5.13
  #   environment:
  #     - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
  #   ports:
  #     - "7474:7474"  # Neo4j Browser UI
  #     - "7687:7687"  # Bolt protocol
  #   depends_on:
  #     - neo4j

  neo4j:
    image: neo4j:5.13
    # deploy:
    #   mode: replicated
    #   replicas: 2
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=1024M
    ports:
      - "7474:7474"  # Browser UI
      - "7687:7687"  # Bolt protocol
    volumes:
      - neo4j_data:/data
    networks:
      - app_network
  
  # MinIO Content

  # redis_insight:
  #   image: redislabs/redisinsight:latest
  #   ports:
  #     - "8001:8001"
  #   volumes:
  #     - redisinsight_data:/db
  #   depends_on:
  #     - redis
  
  minio:
    image: minio/minio:latest
    # deploy:
    #   mode: replicated
    #   replicas: 1
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - MINIO_BROWSER=off
    ports:
      - "9000:9000"
      - "9002:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - app_network

  # PostgreSQL
  
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
      
  postgres:
    image: postgres:latest
    # deploy:
    #   mode: replicated
    #   replicas: 1
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

volumes:
  elasticsearch_data:
  redis_data:
  neo4j_data:
  minio_data:
  postgres_data:
  pgadmin_data:
  redisinsight_data:

networks:
  app_network:
    driver: bridge
