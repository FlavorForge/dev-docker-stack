services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    # deploy:
    #   mode: replicated
    #   replicas: 3  # Three Elasticsearch nodes for clustering
    #   resources:
    #     limits:
    #       memory: 2G
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  #   networks:
  #     - app_network

  redis:
    image: redis:latest
    deploy:
      mode: global  # Runs on all nodes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # networks:
    #   - app_network

  neo4j:
    image: neo4j:5.13
    # deploy:
    #   mode: replicated
    #   replicas: 2  # Two Neo4j instances
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=1024M
    ports:
      - "7474:7474"  # Browser UI
      - "7687:7687"  # Bolt protocol
    volumes:
      - neo4j_data:/data
    # networks:
    #   - app_network

  minio:
    image: minio/minio:latest
    # deploy:
    #   mode: replicated
    #   replicas: 1  # MinIO should run on a single node for consistency
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    ports:
      - "9000:9000"
      - "9002:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    # networks:
    #   - app_network

  postgres:
    image: postgres:latest
    # deploy:
    #   mode: replicated
    #   replicas: 1  # For consistency, unless we use PostgreSQL replication
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # networks:
    #   - app_network

volumes:
  elasticsearch_data:
  redis_data:
  neo4j_data:
  minio_data:
  postgres_data:

# networks:
#   app_network:
#     driver: overlay  # Required for Swarm multi-node networking
